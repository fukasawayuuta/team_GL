/******************************************************************************
	タイトル名 : レンダラクラス
	ファイル名 : rendererGL.h
	作成者     : AT-13C-284 36 深澤佑太
	作成日     : 2016/11/14
	更新日     : 
******************************************************************************/
/******************************************************************************
	インクルードガード
******************************************************************************/
#pragma once

/******************************************************************************
	インクルードファイル
******************************************************************************/
#include "main.h"
#include <gl/gl.h>
#include <gl/GLU.h>
#define DIRECTINPUT_VERSION ( 0x0800 )//警告対処用
#include "dinput.h"			//入力処理に必要

#pragma comment(lib, "OpenGL32.lib")		// OpenGLのライブラリとリンク
#pragma comment(lib, "glu32.lib")			// OpenGLのライブラリとリンク
#pragma comment( lib , "winmm.lib" )		//システム時刻取得に必要
#pragma comment( lib , "dxguid.lib" )		//DirectXコンポーネント使用に必要(細かい作業に必要)
#pragma comment( lib , "dinput8.lib" )		//入力処理に必要

/******************************************************************************
	構造体宣言
******************************************************************************/
/******************************************************************************
	マクロ定義
******************************************************************************/
/******************************************************************************
	Class宣言
******************************************************************************/
class CRerenderer
{
public:
	CRerenderer(void);		//	コンストラクタ
	~CRerenderer(void);		//	デストラクタ

	HRESULT Init(HINSTANCE hInstance , HWND hWnd , BOOL bWindow);		//	初期化処理
	void Uninit(void);													//	終了処理
	void Update(void);													//	更新処理
	void Draw(void);													//	描画処理

	void Begin(void);
	void End(void);

	static CRerenderer *Create(HINSTANCE hInstance , HWND hWnd , BOOL bWindow);		//	作成関数

private:
	 HGLRC m_GLRC;
	 HDC   m_DC;
	 HWND  m_Wnd;
};

